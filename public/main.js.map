{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/todo-form/todo-form.component.css","webpack:///./src/app/components/todo-form/todo-form.component.html","webpack:///./src/app/components/todo-form/todo-form.component.ts","webpack:///./src/app/services/add-new-todo.service.ts","webpack:///./src/app/services/delete-todo.service.ts","webpack:///./src/app/services/get-all-todos.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9hcHAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container jumbotron\\\">\\n  <h1>Todo app</h1>\\n</div>\\n\\n<app-todo-form></app-todo-form>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport {HttpClientModule } from '@angular/common/http'\nimport {RouterModule, Routes} from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { TodoFormComponent } from './components/todo-form/todo-form.component';\n\nimport {GetAllTodosService} from './services/get-all-todos.service'\nimport {AddNewTodoService} from './services/add-new-todo.service'\nimport {DeleteTodoService} from './services/delete-todo.service'\n\nconst appRoutes: Routes = [\n  {path:'', component:TodoFormComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n  ],\n  providers: [GetAllTodosService,AddNewTodoService,DeleteTodoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9jb21wb25lbnRzL3RvZG8tZm9ybS90b2RvLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <form (submit) = \\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>New Todo</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"text\\\" name=\\\"text\\\">\\n      <input type=\\\"submit\\\" value=\\\"add\\\" class=\\\"btn btn-primary\\\">\\n    </div>\\n  </form>\\n</div>\\n\\n\\n<div class=\\\"container\\\">\\n  <ul *ngFor=\\\"let item of todos\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">{{item.text}} <button id=\\\"{{item._id}}\\\" (click) = \\\"deleteClick($event)\\\" class=\\\"btn btn-xs btn-danger btn-lock\\\" style=\\\"float:right; color: aliceblue\\\">X</button></li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {GetAllTodosService} from '../../services/get-all-todos.service'\nimport {AddNewTodoService} from '../../services/add-new-todo.service'\nimport {DeleteTodoService} from '../../services/delete-todo.service'\n\n@Component({\n  selector: 'app-todo-form',\n  templateUrl: './todo-form.component.html',\n  styleUrls: ['./todo-form.component.css']\n})\nexport class TodoFormComponent implements OnInit {\n\n  todos:[];\n  text:String;\n\n  constructor(\n    private getAllTodos: GetAllTodosService,\n    private addTodo: AddNewTodoService,\n    private deleteTodo: DeleteTodoService\n    ) { }\n\n  //getting all todos\n  ngOnInit() {\n    this.getAllTodos.fetchData().subscribe(todos =>{\n      this.todos = todos;\n      for (const iterator of todos) {\n        console.log(iterator);\n      }\n    });\n  }\n\n  //form submit\n  onSubmit(){\n    const todo = {\n      text:this.text\n    }\n    this.addTodo.postTodo(todo).subscribe(data =>{\n      console.log(data);\n    });\n    location.reload();\n  }\n\n  deleteClick(event){\n    let id = event.target.id;\n    this.deleteTodo.deleteTodo(id).subscribe(data =>{\n    });\n    location.reload();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http'\nimport {map} from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddNewTodoService {\n\n  todo:any;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  postTodo(todo):any{\n    let headers = new  HttpHeaders({\n      'Content-Type':'application/json',\n    });\n    return this.http.post('http://localhost:3000/todos', todo, {headers:headers})\n      .pipe(map((res: Response)=>{\n        console.log(res);\n        return res;\n      }\n      ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http'\nimport {map} from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeleteTodoService {\n\n  todo:any;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n    deleteTodo(id):any{\n      const headers = new  HttpHeaders({\n        'Content-Type':'application/json',\n      });\n      const options ={\n        headers:headers,\n        body: {_id: id}\n      }\n\n      return this.http.delete(\"http://localhost:3000/todos/\", options).pipe(map(res=>{res}));\n      \n      }\n    \n\n\n  }\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient} from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetAllTodosService {\n\n  constructor(private http: HttpClient) { }\n\n  fetchData():any{\n    let headers = new  HttpHeaders({\n      'Content-Type':'application/json',\n      'Accept': 'application/json'\n    });\n    return this.http.get('http://localhost:3000/todos',{headers:headers}).pipe(\n      map((res: Response) => {\n        console.log(res);\n        return res;\n      })\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}